import { clerkMiddleware } from '@clerk/nextjs/server';
import { NextResponse } from 'next/server';

// Public routes that don't require authentication
const PUBLIC_ROUTES = [
  '/',
  '/about',
  '/contact',
  '/pricing',
  '/sign-in',
  '/sign-up',
  '/api/webhooks/stripe',
  '/api/health'
];

function isPublicRoute(pathname: string): boolean {
  return PUBLIC_ROUTES.some(route => {
    return pathname === route || pathname.startsWith(route + '/');
  });
}

export default clerkMiddleware(async (auth, req) => {
  const { pathname } = req.nextUrl;
  
  // Skip public routes
  if (isPublicRoute(pathname)) {
    return NextResponse.next();
  }

  // Protect routes that require authentication
  const protectedRoutes = ['/dashboard', '/api/admin', '/api/dispatch', '/api/driver', '/api/customer', '/api/billing', '/api/analytics', '/mobile/driver'];
  const isProtected = protectedRoutes.some(route => pathname.startsWith(route));
  
  if (isProtected) {
    await auth.protect();
  }

  return NextResponse.next();
});

export const config = {
  matcher: [
    // Match all routes except static files
    '/((?!_next/static|_next/image|favicon.ico).*)',
    // Include API routes
    '/api/(.*)',
    // Include mobile routes
    '/mobile/(.*)'
  ],
};